scale_y_continuous(limits = c(0, 1)) +
labs(ylab = 'Winrate', xlab = 'Index', color = 'Dice',
title = paste0('Winrates Between ', prm_die, ' and ', alt_die))
}
my_rolls <- roll_dice(dice1, dice4, 1000)
test <- dice_stats(my_rolls)
graph_probs(test)
my_rolls <- roll_dice(dice1, dice2, 1000)
test <- dice_stats(my_rolls)
graph_probs(test)
graph_probs <- function(dat) {
prm_die <- as.character(rolled_dice[[1]])
alt_die <- as.character(rolled_dice[[2]])
ggplot(data = dat, aes(x = index)) +
geom_line(aes(y = winrate, col = prm_die), show.legend = TRUE) +
geom_line(aes(y = winrate2, col = alt_die), show.legend = TRUE) +
scale_y_continuous(limits = c(0, 1)) +
labs(ylab = 'Winrate', xlab = 'Index', color = 'Dice',
title = paste0('Winrates Between ', prm_die, ' and ', alt_die))
}
my_rolls <- roll_dice(dice1, dice2, 1000)
test <- dice_stats(my_rolls)
graph_probs(test)
?labs
graph_probs <- function(dat) {
prm_die <- as.character(rolled_dice[[1]])
alt_die <- as.character(rolled_dice[[2]])
ggplot(data = dat, aes(x = index)) +
geom_line(aes(y = winrate, col = prm_die), show.legend = TRUE) +
geom_line(aes(y = winrate2, col = alt_die), show.legend = TRUE) +
scale_y_continuous(limits = c(0, 1)) +
labs(y = 'Winrate', x = 'Index', color = 'Dice',
title = paste0('Winrates Between ', prm_die, ' and ', alt_die))
}
my_rolls <- roll_dice(dice1, dice2, 1000)
test <- dice_stats(my_rolls)
graph_probs(test)
graph_probs <- function(dat) {
prm_die <- as.character(rolled_dice[[1]])
alt_die <- as.character(rolled_dice[[2]])
ggplot(data = dat, aes(x = index)) +
geom_line(aes(y = winrate, col = prm_die), show.legend = TRUE) +
geom_line(aes(y = winrate2, col = alt_die), show.legend = TRUE) +
scale_y_continuous(limits = c(0, 1)) +
labs(y = 'Winrate', x = 'Number of Rolls', color = 'Dice',
title = paste0('Winrates Between ', prm_die, ' and ', alt_die))
}
my_rolls <- roll_dice(dice1, dice2, 1000)
test <- dice_stats(my_rolls)
graph_probs(test)
my_rolls <- roll_dice(dice4, dice1, 1000)
test <- dice_stats(my_rolls)
graph_probs(test)
my_rolls <- roll_dice(dice3, dice4, 1000)
test <- dice_stats(my_rolls)
graph_probs(test)
rm(list = ls())
suppress <- function(x) {
suppressMessages(suppressWarnings(x))
}
suppress(library(ggplot2))
suppress(library(dplyr))
dice1 <- c(rep(3, 6))
dice2 <- c(rep(4, 4), rep(0, 2))
dice3 <- c(rep(5, 3), rep(1, 3))
dice4 <- c(rep(6, 2), rep(2, 4))
roll_dice <- function(prm_die, alt_die, n) {
set.seed(518)
rolls <- data.frame(index = as.numeric(1:n),
results = as.numeric(1:n)
)
rolled_dice <<- c(substitute(prm_die), substitute(alt_die))
for (i in 1:n) {
player_1 <- sample(prm_die, 1)
player_2 <- sample(alt_die, 1)
if (player_1 > player_2) {
result = 1
} else {
result = 0
}
rolls[i, 'results'] = result
}
return(rolls)
}
dice_stats <- function(rolls) {
rolls <- rolls %>%
mutate(prm_cusum = cumsum(results),
winrate = (prm_cusum / index),
winrate2 = (1 - winrate)
)
return(rolls)
}
graph_probs <- function(dat) {
prm_die <- as.character(rolled_dice[[1]])
alt_die <- as.character(rolled_dice[[2]])
ggplot(data = dat, aes(x = index)) +
geom_line(aes(y = winrate, col = prm_die), show.legend = TRUE) +
geom_line(aes(y = winrate2, col = alt_die), show.legend = TRUE) +
scale_y_continuous(limits = c(0, 1)) +
labs(y = 'Winrate', x = 'Number of Rolls', color = 'Dice',
title = paste0('Winrates Between ', prm_die, ' and ', alt_die))
}
my_rolls <- roll_dice(dice1, dice2, 1000)
test <- dice_stats(my_rolls)
graph_probs(test)
my_rolls <- roll_dice(dice2, dice3, 1000)
test <- dice_stats(my_rolls)
graph_probs(test)
my_rolls <- roll_dice(dice3, dice4, 1000)
test <- dice_stats(my_rolls)
graph_probs(test)
my_rolls <- roll_dice(dice4, dice1, 1000)
test <- dice_stats(my_rolls)
graph_probs(test)
?structure
?dput
?df
?c
suppress <- function(x) {
suppressMessages(suppressWarnings(x))
}
suppress(library(ggplot2))
suppress(library(dplyr))
set.seed(518)
suppress <- function(x) {
suppressMessages(suppressWarnings(x))
}
suppress(library(ggplot2))
suppress(library(dplyr))
set.seed(518)
dice1 <- c(rep(3, 6))
dice2 <- c(rep(4, 4), rep(0, 2))
dice3 <- c(rep(5, 3), rep(1, 3))
dice4 <- c(rep(6, 2), rep(2, 4))
roll_dice <- function(prm_die, alt_die, n) {
rolls <- data.frame(index = as.numeric(1:n),
results = as.numeric(1:n)
)
rolled_dice <<- c(substitute(prm_die), substitute(alt_die))
for (i in 1:n) {
player_1 <- sample(prm_die, 1)
player_2 <- sample(alt_die, 1)
if (player_1 > player_2) {
result = 1
} else {
result = 0
}
rolls[i, 'results'] = result
}
return(rolls)
}
dice_stats <- function(rolls) {
rolls <- rolls %>%
mutate(prm_cusum = cumsum(results),
winrate = (prm_cusum / index),
winrate2 = (1 - winrate)
)
return(rolls)
}
graph_probs <- function(dat) {
prm_die <- as.character(rolled_dice[[1]])
alt_die <- as.character(rolled_dice[[2]])
ggplot(data = dat, aes(x = index)) +
geom_line(aes(y = winrate, col = prm_die), show.legend = TRUE) +
geom_line(aes(y = winrate2, col = alt_die), show.legend = TRUE) +
scale_y_continuous(limits = c(0, 1)) +
labs(y = 'Winrate', x = 'Number of Rolls', color = 'Dice',
title = paste0('Winrates Between ', prm_die, ' and ', alt_die))
}
my_rolls <- roll_dice(dice1, dice2, 1000)
test <- dice_stats(my_rolls)
graph_probs(test)
my_rolls <- roll_dice(dice1, dice2, 1000)
test <- dice_stats(my_rolls)
graph_probs(test)
my_rolls <- roll_dice(dice1, dice2, 1000)
test <- dice_stats(my_rolls)
graph_probs(test)
my_rolls <- roll_dice(dice1, dice2, 1000)
test <- dice_stats(my_rolls)
graph_probs(test)
.Random.seed
.Random.seed[10000]
.Random.seed(518)
rol <- c('hi', 'bye')
?
?C
?c
rm(list = ls())
suppress <- function(x) {
suppressMessages(suppressWarnings(x))
}
suppress(library(ggplot2))
suppress(library(dplyr))
die1 <- c(rep(3, 6))
die2 <- c(rep(4, 4), rep(0, 2))
roll_dice <- function(prm_die, alt_die, n) {
set.seed(518)
rolls <- data.frame(index = as.numeric(1:n),
results = as.numeric(1:n)
)
rolled_dice <<- c(substitute(prm_die), substitute(alt_die))
for (i in 1:n) {
player_1 <- sample(prm_die, 1)
player_2 <- sample(alt_die, 1)
if (player_1 > player_2) {
result = 1
} else {
result = 0
}
rolls[i, 'results'] = result
}
return(rolls)
}
rm(list = ls())
suppress <- function(x) {
suppressMessages(suppressWarnings(x))
}
suppress(library(ggplot2))
suppress(library(dplyr))
die1 <- c(rep(3, 6))
die2 <- c(rep(4, 4), rep(0, 2))
roll_dice <- function(prm_die, alt_die, n) {
set.seed(518)
rolls <- data.frame(index = as.numeric(1:n),
results = as.numeric(1:n)
)
rolled_dice <<- c(substitute(prm_die), substitute(alt_die))
for (i in 1:n) {
player_1 <- sample(prm_die, 1)
player_2 <- sample(alt_die, 1)
if (player_1 > player_2) {
result = 1
} else {
result = 0
}
rolls[i, 'results'] = result
}
return(rolls)
}
dice_stats <- function(rolls) {
rolls <- rolls %>%
mutate(prm_cusum = cumsum(results),
winrate = (prm_cusum / index),
winrate2 = (1 - winrate)
)
return(rolls)
}
graph_probs <- function(dat) {
prm_die <- as.character(rolled_dice[[1]])
alt_die <- as.character(rolled_dice[[2]])
ggplot(data = dat, aes(x = index)) +
geom_line(aes(y = winrate, col = prm_die), show.legend = TRUE) +
geom_abline(slope = 0, intercept = mean(dat[,'winrate'])) +
geom_line(aes(y = winrate2, col = alt_die), show.legend = TRUE) +
geom_abline(slope = 0, intercept = mean(dat[,'winrate2'])) +
scale_y_continuous(limits = c(0, 1)) +
labs(y = 'Winrate', x = 'Number of Rolls', color = 'Dice',
title = paste0('Winrates Between ', prm_die, ' and ', alt_die))
}
my_rolls <- roll_dice(dice1, dice2, 1000)
my_rolls <- roll_dice(die1, die2, 1000)
test <- dice_stats(my_rolls)
graph_probs(test)
graph_probs <- function(dat) {
prm_die <- as.character(rolled_dice[[1]])
alt_die <- as.character(rolled_dice[[2]])
ggplot(data = dat, aes(x = index)) +
geom_line(aes(y = winrate, col = prm_die), show.legend = TRUE) +
geom_line(aes(y = winrate2, col = alt_die), show.legend = TRUE) +
scale_y_continuous(limits = c(0, 1)) +
labs(y = 'Winrate', x = 'Number of Rolls', color = 'Dice',
title = paste0('Winrates Between ', prm_die, ' and ', alt_die))
}
my_rolls <- roll_dice(die1, die2, 1000)
test <- dice_stats(my_rolls)
graph_probs(test)
dice3 <- c(rep(5, 3), rep(1, 3))
my_rolls <- roll_dice(die2, die3, 1000)
my_rolls <- roll_dice(die2, die3, 1000)
die3 <- c(rep(5, 3), rep(1, 3))
rm(list = ls())
suppress <- function(x) {
suppressMessages(suppressWarnings(x))
}
suppress(library(ggplot2))
suppress(library(dplyr))
die1 <- c(rep(3, 6))
die2 <- c(rep(4, 4), rep(0, 2))
roll_dice <- function(prm_die, alt_die, n) {
set.seed(518)
rolls <- data.frame(index = as.numeric(1:n),
results = as.numeric(1:n)
)
rolled_dice <<- c(substitute(prm_die), substitute(alt_die))
for (i in 1:n) {
player_1 <- sample(prm_die, 1)
player_2 <- sample(alt_die, 1)
if (player_1 > player_2) {
result = 1
} else {
result = 0
}
rolls[i, 'results'] = result
}
return(rolls)
}
dice_stats <- function(rolls) {
rolls <- rolls %>%
mutate(prm_cusum = cumsum(results),
winrate = (prm_cusum / index),
winrate2 = (1 - winrate)
)
return(rolls)
}
graph_probs <- function(dat) {
prm_die <- as.character(rolled_dice[[1]])
alt_die <- as.character(rolled_dice[[2]])
ggplot(data = dat, aes(x = index)) +
geom_line(aes(y = winrate, col = prm_die), show.legend = TRUE) +
geom_line(aes(y = winrate2, col = alt_die), show.legend = TRUE) +
scale_y_continuous(limits = c(0, 1)) +
labs(y = 'Winrate', x = 'Number of Rolls', color = 'Dice',
title = paste0('Winrates Between ', prm_die, ' and ', alt_die))
}
my_rolls <- roll_dice(die1, die2, 1000)
test <- dice_stats(my_rolls)
graph_probs(test)
die3 <- c(rep(5, 3), rep(1, 3))
my_rolls <- roll_dice(die2, die3, 1000)
test <- dice_stats(my_rolls)
graph_probs(test)
my_rolls <- roll_dice(die1, die3, 1000)
test <- dice_stats(my_rolls)
graph_probs(test)
my_rolls <- roll_dice(die1, die3, 10000)
test <- dice_stats(my_rolls)
graph_probs(test)
my_rolls <- roll_dice(die1, die3, 15000)
test <- dice_stats(my_rolls)
graph_probs(test)
my_rolls <- roll_dice(die3, die4, 1000)
die4 <- c(rep(6, 2), rep(2, 4))
my_rolls <- roll_dice(die3, die4, 1000)
test <- dice_stats(my_rolls)
graph_probs(test)
my_rolls <- roll_dice(die4, die2, 1000)
test <- dice_stats(my_rolls)
graph_probs(test)
my_rolls <- roll_dice(die4, die2, 1000)
test <- dice_stats(my_rolls)
graph_probs(test)
my_rolls <- roll_dice(die3, die1, 1000)
test <- dice_stats(my_rolls)
graph_probs(test)
my_rolls <- roll_dice(die4, die1, 1000)
test <- dice_stats(my_rolls)
graph_probs(test)
my_rolls <- roll_dice(die4, die1, 1000)
test <- dice_stats(my_rolls)
graph_probs(test)
my_rolls <- roll_dice(die4, die2, 1000)
test <- dice_stats(my_rolls)
graph_probs(test)
my_rolls <- roll_dice(die3, die2, 1000)
test <- dice_stats(my_rolls)
graph_probs(test)
my_rolls <- roll_dice(die3, die1, 1000)
test <- dice_stats(my_rolls)
graph_probs(test)
my_rolls <- roll_dice(die3, die1, 10000)
test <- dice_stats(my_rolls)
graph_probs(test)
my_rolls <- roll_dice(die3, die1, 15000)
test <- dice_stats(my_rolls)
graph_probs(test)
my_rolls <- roll_dice(die1, die3, 15000)
test <- dice_stats(my_rolls)
graph_probs(test)
transitivity_test <- function(prm_die, alt_die, n) {
test_rolls <- roll_dice(prm_die, alt_die, n)
test_stats <- dice_stats(test_rolls)
graph_probs(test_stats)
}
transitivity_test <- function(prm_die, alt_die, n) {
test_rolls <- roll_dice(prm_die, alt_die, n)
test_stats <- dice_stats(test_rolls)
graph_probs(test_stats)
}
transitivity_test(die1, die3, 1000)
rm(list = ls())
detach("package:dplyr", unload=TRUE)
detach("package:ggplot2", unload=TRUE)
suppress <- function(x) {
suppressMessages(suppressWarnings(x))
}
suppress(library(ggplot2))
suppress(library(dplyr))
die1 <- c(rep(3, 6))
die2 <- c(rep(4, 4), rep(0, 2))
roll_dice <- function(prm_die, alt_die, n) {
set.seed(518)
rolls <- data.frame(index = as.numeric(1:n),
results = as.numeric(1:n)
)
rolled_dice <<- c(substitute(prm_die), substitute(alt_die))
for (i in 1:n) {
player_1 <- sample(prm_die, 1)
player_2 <- sample(alt_die, 1)
if (player_1 > player_2) {
result = 1
} else {
result = 0
}
rolls[i, 'results'] = result
}
return(rolls)
}
dice_stats <- function(rolls) {
rolls <- rolls %>%
mutate(prm_cusum = cumsum(results),
winrate = (prm_cusum / index),
winrate2 = (1 - winrate)
)
return(rolls)
}
graph_probs <- function(dat) {
prm_die <- as.character(rolled_dice[[1]])
alt_die <- as.character(rolled_dice[[2]])
ggplot(data = dat, aes(x = index)) +
geom_line(aes(y = winrate, col = prm_die), show.legend = TRUE) +
geom_line(aes(y = winrate2, col = alt_die), show.legend = TRUE) +
scale_y_continuous(limits = c(0, 1)) +
labs(y = 'Winrate', x = 'Number of Rolls', color = 'Dice',
title = paste0('Winrates Between ', prm_die, ' and ', alt_die))
}
my_rolls <- roll_dice(die1, die2, 1000)
test <- dice_stats(my_rolls)
graph_probs(test)
die3 <- c(rep(5, 3), rep(1, 3))
my_rolls <- roll_dice(die2, die3, 1000)
test <- dice_stats(my_rolls)
graph_probs(test)
die4 <- c(rep(6, 2), rep(2, 4))
my_rolls <- roll_dice(die3, die4, 1000)
test <- dice_stats(my_rolls)
graph_probs(test)
my_rolls <- roll_dice(die3, die1, 1000)
test <- dice_stats(my_rolls)
graph_probs(test)
my_rolls <- roll_dice(die4, die1, 1000)
test <- dice_stats(my_rolls)
graph_probs(test)
rm(list = ls())
suppress <- function(x) {
suppressMessages(suppressWarnings(x))
}
suppress(library(ggplot2))
suppress(library(dplyr))
die1 <- c(rep(3, 6))
die2 <- c(rep(4, 4), rep(0, 2))
roll_dice <- function(prm_die, alt_die, n) {
set.seed(518)
rolls <- data.frame(index = as.numeric(1:n),
results = as.numeric(1:n)
)
rolled_dice <<- c(substitute(prm_die), substitute(alt_die))
for (i in 1:n) {
player_1 <- sample(prm_die, 1)
player_2 <- sample(alt_die, 1)
if (player_1 > player_2) {
result = 1
} else {
result = 0
}
rolls[i, 'results'] = result
}
return(rolls)
}
dice_stats <- function(rolls) {
rolls <- rolls %>%
mutate(prm_cusum = cumsum(results),
winrate = (prm_cusum / index),
winrate2 = (1 - winrate)
)
return(rolls)
}
graph_probs <- function(dat) {
prm_die <- as.character(rolled_dice[[1]])
alt_die <- as.character(rolled_dice[[2]])
ggplot(data = dat, aes(x = index)) +
geom_line(aes(y = winrate, col = prm_die), show.legend = TRUE) +
geom_line(aes(y = winrate2, col = alt_die), show.legend = TRUE) +
scale_y_continuous(limits = c(0, 1)) +
labs(y = 'Winrate', x = 'Number of Rolls', color = 'Dice',
title = paste0('Winrates Between ', prm_die, ' and ', alt_die))
}
my_rolls <- roll_dice(die1, die2, 1000)
test <- dice_stats(my_rolls)
graph_probs(test)
die3 <- c(rep(5, 3), rep(1, 3))
my_rolls <- roll_dice(die2, die3, 1000)
test <- dice_stats(my_rolls)
graph_probs(test)
die4 <- c(rep(6, 2), rep(2, 4))
my_rolls <- roll_dice(die3, die4, 1000)
test <- dice_stats(my_rolls)
graph_probs(test)
my_rolls <- roll_dice(die4, die1, 1000)
test <- dice_stats(my_rolls)
graph_probs(test)
getwd()
